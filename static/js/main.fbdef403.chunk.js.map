{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","findMovie","title","a","fetch","response","json","FindMovie","onAdd","useState","setMovie","setTitle","error","setError","alreadyHave","setAlreadyHave","isLoading","setIsLoading","handleFindMovie","film","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","some","disabled","App","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbdef403.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com';\n\nexport const findMovie = async (title: string) => {\n  const response = await fetch(`${BASE_URL}/?apikey=13b8ae73&t=${title}`);\n\n  return response.json();\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\n\nimport { findMovie } from '../../api/api';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n  movies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd, movies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState<string>('');\n  const [error, setError] = useState<boolean>(false);\n  const [alreadyHave, setAlreadyHave] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const handleFindMovie = async () => {\n    setIsLoading(true);\n    const film = await findMovie(title);\n\n    if (!film.imdbID) {\n      setError(true);\n    } else {\n      setMovie(film);\n    }\n\n    setIsLoading(false);\n  };\n\n  const clearInput = () => {\n    if (!error) {\n      setTitle('');\n      setMovie(null);\n    }\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setError(false);\n    setAlreadyHave(false);\n  };\n\n  const doHaveFilm = () => {\n    if (movie && (movies.some(film => film.imdbID === movie.imdbID))) {\n      setAlreadyHave(true);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': error },\n              )}\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n          {alreadyHave && (\n            <p className=\"help is-danger\">\n              The movie is already on page\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              onClick={() => handleFindMovie()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie ? (\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  onAdd(movie);\n                  doHaveFilm();\n                  clearInput();\n                }}\n              >\n                Add to the list\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                disabled\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ntype Props = {};\n\nexport const App: React.FC<Props> = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (film: Movie) => {\n    if (!movies.some(movie => movie.imdbID === film.imdbID)\n      && film.imdbID) {\n      setMovies(prevMovies => [...prevMovies, film]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={handleAddMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}